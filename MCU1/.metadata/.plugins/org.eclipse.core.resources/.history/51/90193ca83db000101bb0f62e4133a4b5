/*
 * 004filter.c
 *
 *  Created on: Oct 22, 2025
 *      Author: jiperez
 */
#include "stm32f446.h"

TIM_Handle_t *pTIM ;

int main(void)
{
	SystemCLK_Config_84MHz();

	GPIO_Handle_t GpioLed;

	GPIO_PeriClockControl(GPIOA, ENABLE);

	GpioLed.pGPIOx = GPIOA;
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;

	GPIO_Init(&GpioLed);

	TIM_Handle_t TIM_2;
	pTIM = &TIM_2;
	TIM_2.pTIMx = TIM2;
	TIM_2.TIM_Config.TIM_Frequency = 10;
	TIM_2.TIM_Config.TIM_CLKDivision = TIM_CKD_DIV1;
	TIM_2.TIM_Config.TIM_AutoReloadPreload = TIM_ARPE_ENABLE;
	TIM_2.TIM_Config.TIM_CNTMode = TIM_UPCOUNT_MODE;
	TIM_2.TIM_Config.TIM_IntEnable = TIM_IT_ENABLE;
	TIM_2.TIM_Config.TIM_MasterModeSel = TIM_MMS_RESET;
	TIM_Init(&TIM_2);

	TIM_Start(&TIM_2);

	TIM_IRQInterruptConfig(IRQ_NO_TIM2, ENABLE);
	TIM_IRQPriorityConfig(IRQ_NO_TIM2, 0);


	while(1);
	return 0;
}

void TIM2_IRQHandler(void)
{
	static uint16_t cont = 0;
	cont++;
	if(pTIM->pTIMx->SR & (1 <<0)) pTIM->pTIMx->SR &= ~(1 << 0);
	new = (value[0]/4095.0f)*3.3f;
    if(cont % 500 == 0) {
        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
    }
}

